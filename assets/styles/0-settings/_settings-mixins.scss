@function pxToRem($px: 16) {
	@return calc(1rem * $px / 16);
}

@mixin font($font) {
	@if ($font == "big") {
		& {
			font-size: pxToRem(80);
			line-height: pxToRem(86);
			font-weight: 600;

			@media not #{$desktop} {
				font-size: pxToRem(40);
				line-height: pxToRem(45);
			}
		}
	} @else if ($font == "h1") {
		& {
			font-size: pxToRem(45);
			line-height: pxToRem(48);
			font-weight: 600;

			@media not #{$desktop} {
				font-size: pxToRem(30);
				line-height: normal;
			}
		}
	} @else if ($font == "h2") {
		& {
			font-size: pxToRem(35);
			line-height: pxToRem(39);
			font-weight: 600;

			@media not #{$desktop} {
				font-size: pxToRem(25);
				line-height: normal;
			}
		}
	} @else if ($font == "h3") {
		& {
			font-size: pxToRem(20);
			line-height: pxToRem(21);
			font-weight: 600;
		}
	} @else if ($font == "p-main") {
		& {
			font-size: pxToRem(16);
			line-height: pxToRem(21);
			font-weight: 500;
		}
	} @else if ($font == "p") {
		& {
			font-size: pxToRem(14);
			line-height: normal;
			font-weight: 500;
		}
	} @else if ($font == "cta") {
		& {
			font-size: pxToRem(16);
			line-height: normal;
			font-weight: 600;
		}
	} @else if ($font == "small") {
		& {
			font-size: pxToRem(11);
			line-height: normal;
			font-weight: 500;
		}
	}
}

@mixin prop($property, $px, $important: null) {
	& {
		#{$property}: pxToRem($px) $important;
	}
}

@mixin padding($px: 1, $important: null) {
	@include prop("padding", $px, $important);
}

@mixin gap($px: 1, $important: null) {
	@include prop("gap", $px, $important);
}

@mixin inset($px: 0) {
	top: pxToRem($px);
	bottom: pxToRem($px);
	left: pxToRem($px);
	right: pxToRem($px);

	@supports (inset: $px) {
		inset: pxToRem($px);
	}
}

@mixin wrapper($wrapper: 1440px, $px: 24) {
	& {
		margin: 0 auto;
		max-width: $wrapper;
		width: 100%;
		@include prop("padding-inline", $px);
	}
}
